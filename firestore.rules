rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      match /reviews/{reviewId} {
        allow create, read: if request.auth != null;
        allow update, delete: if false;
      }
    }

    match /requests/{requestId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null && 
                     (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.responderId);
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;

      match /offers/{offerId} {
        // ... (rules are correct)
        allow read: if request.auth != null;
        allow create: if request.auth != null &&
                       request.auth.uid != get(/databases/$(database)/documents/requests/$(requestId)).data.userId;
        allow delete: if request.auth != null && request.auth.uid == resource.data.helperId;
        allow update: if false;
      }
      match /actions/{actionId} {
        // ... (rules are correct)
        allow create: if request.auth != null &&
                       (request.auth.uid == get(/databases/$(database)/documents/requests/$(requestId)).data.userId ||
                        request.auth.uid == get(/databases/$(database)/documents/requests/$(requestId)).data.responderId ||
                        request.resource.data.type == 'make_offer');
        allow read, update, delete: if false;
      }
    }

    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
      allow delete: if request.auth != null &&
                     get(/databases/$(database)/documents/requests/$(chatId)).data.status == 'completed';
      // This is the corrected rule for sending a message (updating the chat)
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      match /messages/{messageId} {
        // ... (rules are correct)
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow update, delete: if false;
      }
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}